{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lists.resolver.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/admin/admin-panel/admin-panel.component.css","webpack:///./src/app/admin/admin-panel/admin-panel.component.html","webpack:///./src/app/admin/admin-panel/admin-panel.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) {}\n\n  // union type - we can return any of these values\n  // canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertify.error('Not logged in');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges\r\n  implements CanDeactivate<MemberEditComponent> {\r\n  canDeactivate(component: MemberEditComponent) {\r\n    if (component.editForm.dirty) {\r\n      return confirm(\r\n        'Are you sure you want to continue? Any unsaved changes will be lost.'\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  likesParam = 'Likers'; // List of users that like current user\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(route.params['id']).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving your data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  messageContainer = 'Unread';\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n    return this.userService.getMessages(this.authService.decodedToken.nameid, this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallback();\n      } else {\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  changeMemberPhoto(photoUrl: string) {\n    // Updates photoUrl\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          // save token to local storage\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.currentUser = user.user;\n          this.changeMemberPhoto(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + 'register', user);\n  }\n\n  loggedIn() {\n    // check if there is token in local storage and if it's expired\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError(error => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          if (error.status === 401) {\r\n            return throwError(error.statusText);\r\n          }\r\n\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            console.error(applicationError);\r\n            return throwError(applicationError);\r\n          }\r\n\r\n          const serverError = error.error;\r\n          let modalStateErrors = '';\r\n          if (serverError && typeof serverError === 'object') {\r\n            for (const key in serverError) {\r\n              if (serverError[key]) {\r\n                modalStateErrors += serverError[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n\r\n          return throwError(modalStateErrors || serverError || 'Server Error');\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParam === 'Likers') {\n      params = params.append('likers', 'true');\n    }\n\n    if (likesParam === 'Likers') {\n      params = params.append('likers', 'false');\n    }\n\n    return this.http\n      .get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: Number, user: User) {\n    return this.http.put(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: Number, id: Number) {\n    // We send empty object {} because it's post request\n    // and we need to send something\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {});\n  }\n\n  deletePhoto(userId: Number, id: Number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') !== null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n\n  sendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {})\n      .subscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  admin-panel works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    // save token so we don't lose it on page refresh\n    const token = localStorage.getItem('token');\n    // parse user from token because it's saved as string\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","// node_modules components\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule, TabsModule, BsDatepickerModule, PaginationModule, ButtonsModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { TimeAgoPipe } from 'time-ago-pipe';\n\n// local components\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AlertifyService } from './_services/alertify.service';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { UserService } from './_services/user.service';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    ListsComponent,\n    MessagesComponent,\n    MemberCardComponent,\n    MemberDetailComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TimeAgoPipe,\n    MemberMessagesComponent,\n    AdminPanelComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    ButtonsModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    NgxGalleryModule,\n    FileUploadModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: ['localhost:5000'],\n        blacklistedRoutes: ['localhost:5000/api/auth']\n      }\n    })\n  ],\n  providers: [\n    AuthService,\n    ErrorInterceptorProvider,\n    AlertifyService,\n    AuthGuard,\n    UserService,\n    MemberDetailResolver,\n    MemberListResolver,\n    MemberEditResolver,\n    PreventUnsavedChanges,\n    ListsResolver,\n    MessagesResolver\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  values: any;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {}\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like\\n        me</button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I\\n        like</button>\\n    </div>\\n  </div>\\n\\n  <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n\\n\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n\\n  </pagination>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService,\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe(\n        (res: PaginatedResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n}\n","module.exports = \".card:hover img {\\r\\n  -webkit-transform: scale(1.2, 1.2);\\r\\n          transform: scale(1.2, 1.2);\\r\\n  transition-duration: 500ms;\\r\\n  transition-timing-function: ease-out;\\r\\n  opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n  -webkit-transform: scale(1.0, 1.0);\\r\\n          transform: scale(1.0, 1.0);\\r\\n  transition-duration: 500ms;\\r\\n  transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n  position: absolute;\\r\\n  bottom: -30%;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  margin-right: auto;\\r\\n  margin-left: auto;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n  bottom: 0;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n  transition: all 0.3s ease-in-out;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\">\\n          <i class=\\\"fa fa-user\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike(user.id)\\\">\\n          <i class=\\\"fa fa-heart\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\"\\n          [queryParams]=\\\"{tab: 3}\\\">\\n          <i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center\\\"><i class=\\\"fa fa-user\\\"></i>\\n      {{user.knownAs}}, {{user.age}}\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\">\\n      {{user.city}}\\n    </p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() { }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(() => {\n      this.alertify.success('You have liked: ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","module.exports = \".img-thumbnail {\\r\\n  margin: 25px;\\r\\n  width: 85%;\\r\\n  height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n  padding: 10px 15px;\\r\\n  background-color: #fff;\\r\\n  border-top: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user?.photoUrl || '../../../assets/user.png'}}\\\"\\n          alt=\\\"{{user?.knownAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last active:</strong>\\n            <p>{{user.lastActive |timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member since:</strong>\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\" #memberTabs>\\n          <tab heading=\\\"About {{user?.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user.introduction}}</p>\\n            <h4>Looking for</h4>\\n            <p>{{user.lookingFor}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <app-member-messages [recipientId]=\\\"user.id\\\"></app-member-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  NgxGalleryOptions,\n  NgxGalleryImage,\n  NgxGalleryAnimation\n} from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs') memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    // this.loadUser()\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imageUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n\n    return imageUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  // loadUser() {\n  //   // + converts string to number\n  //   this.userService.getUser(+this.route.snapshot.params['id']).subscribe(\n  //     (user: User) => {\n  //       this.user = user;\n  //     },\n  //     error => {\n  //       this.alertify.error('error');\n  //     }\n  //   );\n  // }\n}\n","module.exports = \".img-thumbnail {\\r\\n  margin: 25px;\\r\\n  width: 85%;\\r\\n  height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n  padding: 10px 15px;\\r\\n  background-color: #fff;\\r\\n  border-top: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <h1>Your Profile</h1>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n        <strong>Information:</strong> You have unsaved changes.\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last active:</strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member since:</strong>\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button [disabled]=\\\"!editForm.dirty\\\" class=\\\"btn btn-success btn-block\\\" form=\\\"editForm\\\">Save Changes</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"Edit Profile\\\">\\n            <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateUser()\\\" id=\\\"editForm\\\">\\n              <h4>Description</h4>\\n              <textarea class=\\\"form-control\\\" name=\\\"introduction\\\" rows=\\\"6\\\" [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n              <h4>Looking For</h4>\\n              <textarea class=\\\"form-control\\\" name=\\\"lookingFor\\\" rows=\\\"6\\\" [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n              <h4>Interests</h4>\\n              <textarea class=\\\"form-control\\\" name=\\\"interests\\\" rows=\\\"6\\\" [(ngModel)]=\\\"user.interests\\\"></textarea>\\n              <h4>Location Details:</h4>\\n              <div class=\\\"form-inline\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                <label for=\\\"country\\\">Country</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n              </div>\\n\\n              <div class=\\\"form-inline\\\">\\n\\n              </div>\\n            </form>\\n          </tab>\\n          <tab heading=\\\"Edit Photos\\\">\\n            <app-photo-editor [photos]=\\\"user.photos\\\" (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\">\\n            </app-photo-editor>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  // Accessing form component which is in template\n  @ViewChild('editForm') editForm: NgForm;\n  user: User;\n  photoUrl: string;\n\n  // Prevents closing browser window if form dirty\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(\n      photoUrl => (this.photoUrl = photoUrl)\n    );\n  }\n\n  updateUser() {\n    this.userService\n      .updateUser(this.authService.decodedToken.nameid, this.user)\n      .subscribe(\n        next => {\n          this.alertify.success('User updated successfully');\n          this.editForm.reset(this.user);\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n  <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"applyFilter()\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"minAge\\\">Age From</label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\" [(ngModel)]=\\\"userParams.minAge\\\"\\n        name=\\\"minAge\\\">\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"maxAge\\\">Age To</label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\" [(ngModel)]=\\\"userParams.maxAge\\\"\\n        name=\\\"maxAge\\\">\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"gender\\\">Show: </label>\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\" name=\\\"gender\\\" [(ngModel)]=\\\"userParams.gender\\\">\\n        <!-- <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n          {{gender.display}}\\n        </option> -->\\n        <option value=\\\"all\\\">All</option>\\n        <option value=\\\"male\\\">Males</option>\\n        <option value=\\\"female\\\">Females</option>\\n      </select>\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">Reset Filter</button>\\n\\n    <div class=\\\"col\\\">\\n      <div class=\\\"btn-group float-right\\\">\\n        <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\" (click)=\\\"applyFilter()\\\"\\n          [(ngModel)]=\\\"userParams.orderBy\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\n        <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\" (click)=\\\"applyFilter()\\\"\\n          [(ngModel)]=\\\"userParams.orderBy\\\" btnRadio=\\\"created\\\">Newest Members</button>\\n      </div>\\n    </div>\\n  </form>\\n\\n  <div class=\\\"row mt-4\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n    [itemsPerPage]=\\\"pagination.itemsPerPage\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\"\\n    lastText=\\\"&raquo;\\\" (pageChanged)=\\\"pageChanged($event)\\\">\\n  </pagination>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { User } from '../../_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList: [{ value: 'all', display: 'All' }, { value: 'male', display: 'Males' }, { value: 'female', display: 'Females' }];\n  userParams: any = {};\n  pagination: Pagination;\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.userParams.gender = 'all';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters() {\n    this.userParams.gender = 'all';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.pagination.currentPage = 1;\n    this.loadUsers();\n  }\n\n  applyFilter() {\n    this.pagination.currentPage = 1;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe(\n        (res: PaginatedResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}\n","module.exports = \".card {\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n  list-style: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.chat li {\\r\\n  margin-bottom: 10px;\\r\\n  padding-bottom: 10px;\\r\\n  border-bottom: 1px dotted #B3A9A9;\\r\\n}\\r\\n\\r\\n.rounded-circle {\\r\\n  height: 50px;\\r\\n  width: 50px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  overflow-y: scroll;\\r\\n  height: 400px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      <p>No messages</p>\\n    </div>\\n\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n\\n        <!-- to them -->\\n        <div *ngIf=\\\"message.senderId === recipientId\\\">\\n          <span class=\\\"chat-img float-left\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\n              <small class=\\\"text-muted float-right\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.dateCreated | timeAgo}}</span>\\n              </small>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n\\n        <!-- to me -->\\n        <div *ngIf=\\\"message.senderId !== recipientId\\\">\\n          <span class=\\\"chat-img float-right\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <small class=\\\"text-muted\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.dateCreated | timeAgo}}</span>\\n                <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(unread)</span>\\n                <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{message.dateRead | timeAgo}})</span>\\n              </small>\\n              <strong class=\\\"primary-font float-right\\\">{{message.senderKnownAs}}</strong>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"newMessage.content\\\" name=\\\"content\\\" required class=\\\"form-control input-sm\\\"\\n          placeholder=\\\"send message\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!messageForm.valid\\\">Send</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(private userService: UserService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid; // number\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(messages => {\n        this.messages = messages;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe((message: Message) => {\n        this.messages.unshift(message);\n        this.newMessage.content = '';\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n}\n","module.exports = \"img.img-thumbnail {\\r\\n  height: 100px;\\r\\n  min-width: 100px !important;\\r\\n  margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.nv-file-over {\\r\\n  border: dotten 3px red;\\r\\n}\\r\\n\\r\\ninput[type=file] {\\r\\n  color: transparent;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" alt=\\\"\\\" class=\\\"img-thumbnail p-1\\\">\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-sm mr-1\\\" type=\\\"button\\\" (click)=\\\"setMainPhoto(photo)\\\"\\n        [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\" [disabled]=\\\"photo.isMain\\\">Main</button>\\n      <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"deletePhoto(photo.id)\\\" [disabled]=\\\"photo.isMain\\\">\\n        <i class=\\\"fa fa-trash-o\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <h3>Add photos</h3>\\n\\n    <div ng2FileDrop [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" (fileOver)=\\\"fileOverBase($event)\\\"\\n      [uploader]=\\\"uploader\\\" class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n      <i class=\\\"fa fa-upload fa-2x\\\"></i>\\n      Drop photos here\\n    </div>\\n\\n    Multiple\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple /><br />\\n\\n    Single\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n    <h3>Upload queue</h3>\\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th width=\\\"50%\\\">Name</th>\\n          <th>Size</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\n          <td><strong>{{ item?.file?.name }}</strong></td>\\n          <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div>\\n      <div>\\n        Queue progress:\\n        <div class=\\\"progress mb-4\\\">\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n        </div>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\"\\n        [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n        <span class=\\\"fa fa-upload\\\"></span> Upload\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\" (click)=\\\"uploader.cancelAll()\\\"\\n        [disabled]=\\\"!uploader.isUploading\\\">\\n        <span class=\\\"fa fa-ban\\\"></span> Cancel\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\" (click)=\\\"uploader.clearQueue()\\\"\\n        [disabled]=\\\"!uploader.queue.length\\\">\\n        <span class=\\\"fa fa-trash\\\"></span> Remove\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService\n  ) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    // To avoid error with request credentials\n    this.uploader.onAfterAddingFile = file => {\n      file.withCredentials = false;\n    };\n\n    // After success upload we add photo to other photos\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n\n        this.photos.push(photo);\n        if (photo.isMain) {\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser)\n          );\n        }\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService\n      .setMainPhoto(this.authService.decodedToken.nameid, photo.id)\n      .subscribe(\n        () => {\n          this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n          this.currentMain.isMain = false;\n          photo.isMain = true;\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser)\n          );\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  deletePhoto(id: Number) {\n    this.alertify.confirm('Are you sure you want to delete this photo?', () => {\n      this.userService\n        .deletePhoto(this.authService.decodedToken.nameid, id)\n        .subscribe(\n          () => {\n            this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n            this.alertify.success('Photo has been deleted.');\n          },\n          error => {\n            this.alertify.error('Failed to delete the photo.');\n          }\n        );\n    });\n  }\n}\n","module.exports = \"table {\\r\\n  margin-top: 15px;\\r\\n}\\r\\n\\r\\n.img-circle {\\r\\n  max-height: 50px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n    <h3>No messages</h3>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Message</th>\\n        <th style=\\\"width: 20%\\\">From / To</th>\\n        <th style=\\\"width: 20%\\\">Sent / Received</th>\\n        <th style=\\\"width: 20%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let message of messages\\\"\\n        [routerLink]=\\\"['/members', messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\"\\n        [queryParams]=\\\"{tab: 3}\\\">\\n        <td>{{message.content}}</td>\\n        <td>\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n            <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n            <strong>{{message.senderKnownAs}}</strong>\\n          </div>\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n            <img src={{message?.recipientPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n            <strong>{{message.recipientKnownAs}}</strong>\\n          </div>\\n        </td>\\n        <td>{{message.dateCreated | timeAgo}}</td>\\n        <td>\\n          <!-- stop propagation of event (redirection to member screen) that is defined in upper tr with routerLink -->\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\"\\n            (click)=\\\"deleteMessage(message.id)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private authService: AuthService,\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\n      this.pagination.itemsPerPage, this.messageContainer)\n      .subscribe((res: PaginatedResult<Message[]>) => {\n        this.messages = res.result;\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this message?', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid)\n        .subscribe(() => {\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n          this.alertify.success('Message deleted successfully!');\n        }, error => {\n          this.alertify.error('Failed to delete message.');\n        });\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n}\n","module.exports = \".dropdown-toggle,\\r\\n.dropdown-item {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nimg {\\r\\n  max-height: 50px;\\r\\n  border: 2px solid white;\\r\\n  display: inline;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Fake Tinder</a>\\n    <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\">Lists</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n      </li>\\n    </ul>\\n\\n    <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n      <span class=\\\"mr-1\\\">\\n        <img src=\\\"{{photoUrl || '../../assets/user.png'}}\\\" alt=\\\"\\\">\\n      </span>\\n      <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n        Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n      </a>\\n\\n      <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\"><i class=\\\"fa fa-user\\\"></i>Edit profile</a>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i>Logout</a>\\n      </div>\\n    </div>\\n\\n    <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required\\n        [(ngModel)]=\\\"model.username\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required\\n        [(ngModel)]=\\\"model.password\\\">\\n      <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n    </form>\\n\\n  </div>\\n\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(\n    public authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(\n      photoUrl => (this.photoUrl = photoUrl)\n    );\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      // () => is used instead next =>\n      () => {\n        this.alertify.success('Logged in successfully');\n      },\n      error => {\n        this.alertify.error(error);\n      },\n      () => {\n        this.router.navigate(['/members']);\n      }\n    );\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n\n    this.alertify.message('Logged out');\n    this.router.navigate(['/home']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline ml-3\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched}\\\"\\n      class=\\\"form-control is-invalid\\\" formControlName=\\\"username\\\" placeholder=\\\"Username\\\">\\n    <div class=\\\"invalid-feedback\\\">Username is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is\\n      required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker\\n      [bsConfig]=\\\"bsConfig\\\"> <!-- for consistent datepickers across all browsers -->\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of\\n      Birth is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is\\n      required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\\\"\\n      class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\\\">\\n      Password is required</div>\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\\\">\\n      Password must be at least 8 characters</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched\\n        || registerForm.get('confirmPassword').touched && registerForm.get('confirmPassword').hasError('mismatch')}\\\"\\n      class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\\\">\\n      Password is required</div>\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('confirmPassword').hasError('mismatch') && registerForm.get('confirmPassword').touched\\\">\\n      Passwords must match</div>\\n  </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder\n} from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  user: User;\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>; // Partial class makes all type props optional\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    };\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group(\n      {\n        gender: ['male'], // Default value\n        username: ['', Validators.required],\n        knownAs: ['', Validators.required],\n        dateOfBirth: [null, Validators.required], // null as default value for date\n        city: ['', Validators.required],\n        country: ['', Validators.required],\n        password: ['', [Validators.required, Validators.minLength(8)]],\n        confirmPassword: ['', Validators.required]\n      },\n      { validator: this.passwordMatchValidator }\n    );\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value\n      ? null\n      : { mismatch: true };\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value); // Clones values from form into empty object\n      this.authService.register(this.user).subscribe(\n        () => {\n          this.alertify.success('Registrations successful.');\n        },\n        error => {\n          this.alertify.error(error);\n        },\n        () => {\n          this.authService.login(this.user).subscribe(() => {\n            this.router.navigate(['/members']);\n          });\n        }\n      );\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\n\r\nexport const appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'members',\r\n        component: MemberListComponent,\r\n        resolve: { users: MemberListResolver }\r\n      },\r\n      {\r\n        path: 'members/:id',\r\n        component: MemberDetailComponent,\r\n        resolve: { user: MemberDetailResolver }\r\n      },\r\n      {\r\n        path: 'member/edit',\r\n        component: MemberEditComponent,\r\n        resolve: { user: MemberEditResolver },\r\n        canDeactivate: [PreventUnsavedChanges]\r\n      },\r\n      {\r\n        path: 'messages',\r\n        component: MessagesComponent,\r\n        resolve: { messages: MessagesResolver }\r\n      },\r\n      {\r\n        path: 'lists',\r\n        component: ListsComponent,\r\n        resolve: { users: ListsResolver }\r\n      },\r\n      {\r\n        path: 'admin',\r\n        component: AdminPanelComponent\r\n      },\r\n    ]\r\n  },\r\n  // this has to be in the end as wildcard\r\n  // if this is on top it would match every request\r\n  {\r\n    path: '**',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}